package com.beone.shg.net.persistence.model;
// Generated Mar 22, 2014 6:10:18 PM by Hibernate Tools 3.1.0.beta4

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * GBankAccount generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="monthly_g_bank_account"
,catalog="shg"
, uniqueConstraints = {  }
		)

public class MonthlyGBankAccount  implements java.io.Serializable {

	// Fields    
//	private static final long serialVersionUID = 9133177099045781095L;
	private MonthlyGBankAccountId id;
	private long bankAccountNo;
	private String month;
	private long groupAcNo;
	private BankAccount bankAccount;
	private BigDecimal clearBalanceAm;
	private BigDecimal subjClearingBalanceAm;
	private BigDecimal verifiedBalanceAm;
	private BigDecimal interestAm;
	private BigDecimal penaltyChargesAm;

	// Constructors

	/** default constructor */
	public MonthlyGBankAccount() {
	}

	// Property accessors
	@EmbeddedId
	@AttributeOverrides( {
		@AttributeOverride(name="bankAccountNo", column=@Column(name="bank_account_no", unique=false, nullable=false, insertable=true, updatable=true) ), 
		@AttributeOverride(name="month", column=@Column(name="month", unique=false, nullable=false, insertable=true, updatable=true) ) } )

	public MonthlyGBankAccountId getId() {
		return this.id;
	}

	public void setId(MonthlyGBankAccountId id) {
		this.id = id;
	}

	@Column(name="bank_account_no", unique=false, nullable=false, insertable=false, updatable=false)
	public long getBankAccountNo() {
		return this.bankAccountNo;
	}

	public void setBankAccountNo(long bankAccountNo) {
		this.bankAccountNo = bankAccountNo;
	}

	@Column(name="month", unique=false, nullable=false, insertable=false, updatable=false, length=10)
	public String getMonth() {
		return month;
	}

	public void setMonth(String month) {
		this.month = month;
	}
	@Column(name="g_ac_no", unique=false, nullable=false, insertable=true, updatable=true)

	public long getGroupAcNo() {
		return this.groupAcNo;
	}

	public void setGroupAcNo(long groupAcNo) {
		this.groupAcNo = groupAcNo;
	}
	@ManyToOne(cascade={},
			fetch=FetchType.EAGER)

	@JoinColumn(name="bank_account_no", unique=true, nullable=false, insertable=false, updatable=false)

	public BankAccount getBankAccount() {
		return this.bankAccount;
	}

	public void setBankAccount(BankAccount bankAccount) {
		this.bankAccount = bankAccount;
	}
	@Column(name="clear_balance_am", unique=false, nullable=true, insertable=true, updatable=true, precision=16)

	public BigDecimal getClearBalanceAm() {
		return this.clearBalanceAm;
	}

	public void setClearBalanceAm(BigDecimal clearBalanceAm) {
		this.clearBalanceAm = clearBalanceAm;
	}
	@Column(name="subj_clearing_balance_am", unique=false, nullable=true, insertable=true, updatable=true, precision=16)

	public BigDecimal getSubjClearingBalanceAm() {
		return this.subjClearingBalanceAm;
	}

	public void setSubjClearingBalanceAm(BigDecimal subjClearingBalanceAm) {
		this.subjClearingBalanceAm = subjClearingBalanceAm;
	}
	@Column(name="verified_balance_am", unique=false, nullable=true, insertable=true, updatable=true, precision=16)
	
	public BigDecimal getVerifiedBalanceAm() {
		return verifiedBalanceAm;
	}

	public void setVerifiedBalanceAm(BigDecimal verifiedBalanceAm) {
		this.verifiedBalanceAm = verifiedBalanceAm;
	}
	@Column(name="interest_am", unique=false, nullable=true, insertable=true, updatable=true, precision=16)

	public BigDecimal getInterestAm() {
		return interestAm;
	}

	public void setInterestAm(BigDecimal interestAm) {
		this.interestAm = interestAm;
	}
	@Column(name="penalty_charges_am", unique=false, nullable=true, insertable=true, updatable=true, precision=16)

	public BigDecimal getPenaltyChargesAm() {
		return penaltyChargesAm;
	}

	public void setPenaltyChargesAm(BigDecimal penaltyChargesAm) {
		this.penaltyChargesAm = penaltyChargesAm;
	}
}
