package com.beone.shg.net.persistence.model;
// Generated Mar 22, 2014 6:10:18 PM by Hibernate Tools 3.1.0.beta4

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

/**
 * MProfile generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="m_profile"
,catalog="shg"
, uniqueConstraints = {  }
		)

public class MProfile  implements java.io.Serializable {

	// Fields    
	private long memberAcNo;
	private long recommendedByMember;
	private long approvedByMember;
	private int approvalStatusId;
	private int activeStatusId;
	private int mroleId;
	private String passcode;
	private byte passSet;
	private byte[] profileCode;
	private Date dateOfEnroll;
	private Date dateOfBirth;
	private Date dateOfAnni;
	private Date dateOfClosure;
	private Date lastLoggedInTs;
	private String gender;
	private Float percentageProfileComplete;
	private String uidaiNo;
	private String panCardNo;
	private String voterIdNo;
	private String drivingLicenseNo;
	private String photoUrl;
	private String attachmentUrl;
	private String description;
	private String location;
	private String errorMessages;
	private Set<MBankAccount> MBankAccounts = new HashSet<MBankAccount>(0);
	private Set<MAc> MAcs = new HashSet<MAc>(0);
	private Set<MemberContact> memberContacts = new HashSet<MemberContact>(0);

	// Transient Fields
	private int groupMemberCounter;
	private long parentGroupAcNo;

	// Constructors

	/** default constructor */
	public MProfile() {
	}

	// Property accessors
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "MemberIdGenerator")
	@GenericGenerator(name = "MemberIdGenerator", strategy = "com.beone.shg.net.persistence.generator.MemberIdGenerator")
	@Column(name="m_ac_no", unique=true, nullable=false, insertable=true, updatable=true)

	public long getMemberAcNo() {
		return this.memberAcNo;
	}

	public void setMemberAcNo(long memberAcNo) {
		this.memberAcNo = memberAcNo;
	}
	@Column(name="reco_by_m", unique=false, nullable=true, insertable=true, updatable=true)

	public long getRecommendedByMember() {
		return this.recommendedByMember;
	}

	public void setRecommendedByMember(long recommendedByMember) {
		this.recommendedByMember = recommendedByMember;
	}
	@Column(name="approved_by_m", unique=false, nullable=true, insertable=true, updatable=true)

	public long getApprovedByMember() {
		return this.approvedByMember;
	}

	public void setApprovedByMember(long approvedByMember) {
		this.approvedByMember = approvedByMember;
	}
	@Column(name="approval_status_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getApprovalStatusId() {
		return this.approvalStatusId;
	}

	public void setApprovalStatusId(int approvalStatusId) {
		this.approvalStatusId = approvalStatusId;
	}
	@Column(name="active_status_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getActiveStatusId() {
		return this.activeStatusId;
	}

	public void setActiveStatusId(int activeStatusId) {
		this.activeStatusId = activeStatusId;
	}
	@Column(name="m_role_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getMroleId() {
		return this.mroleId;
	}

	public void setMroleId(int mroleId) {
		this.mroleId = mroleId;
	}
	@Column(name="passcode", unique=false, nullable=true, insertable=true, updatable=true, length=12)

	public String getPasscode() {
		return this.passcode;
	}

	public void setPasscode(String passcode) {
		this.passcode = passcode;
	}
	@Column(name="pass_set", unique=false, nullable=true, insertable=true, updatable=true)
	
	public byte getPassSet() {
		return passSet;
	}

	public void setPassSet(byte passSet) {
		this.passSet = passSet;
	}

	@Lob
	@Column(name = "profile_code", nullable=true, columnDefinition="blob")
	public byte[] getProfileCode() {
		return profileCode;
	}

	public void setProfileCode(byte[] profileCode) {
		this.profileCode = profileCode;
	}

	@Column(name="date_of_enroll", unique=false, nullable=true, insertable=true, updatable=true, length=10)

	public Date getDateOfEnroll() {
		return this.dateOfEnroll;
	}

	public void setDateOfEnroll(Date dateOfEnroll) {
		this.dateOfEnroll = dateOfEnroll;
	}
	@Column(name="date_of_birth", unique=false, nullable=true, insertable=true, updatable=true, length=10)

	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}
	@Column(name="date_of_anni", unique=false, nullable=true, insertable=true, updatable=true, length=10)

	public Date getDateOfAnni() {
		return this.dateOfAnni;
	}

	public void setDateOfAnni(Date dateOfAnni) {
		this.dateOfAnni = dateOfAnni;
	}
	@Column(name="date_of_closure", unique=false, nullable=true, insertable=true, updatable=true, length=10)

	public Date getDateOfClosure() {
		return this.dateOfClosure;
	}

	public void setDateOfClosure(Date dateOfClosure) {
		this.dateOfClosure = dateOfClosure;
	}
	@Column(name="last_logged_in_ts", unique=false, nullable=true, insertable=true, updatable=true, length=19)

	public Date getLastLoggedInTs() {
		return this.lastLoggedInTs;
	}

	public void setLastLoggedInTs(Date lastLoggedInTs) {
		this.lastLoggedInTs = lastLoggedInTs;
	}
	@Column(name="gender", unique=false, nullable=true, insertable=true, updatable=true, length=10)

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}
	@Column(name="percentage_pro_comp", unique=false, nullable=true, insertable=true, updatable=true, precision=12, scale=0)

	public Float getPercentageProfileComplete() {
		return percentageProfileComplete;
	}

	public void setPercentageProfileComplete(Float percentageProfileComplete) {
		this.percentageProfileComplete = percentageProfileComplete;
	}
	@Column(name="uidai_no", unique=false, nullable=true, insertable=true, updatable=true, length=20)

	public String getUidaiNo() {
		return this.uidaiNo;
	}

	public void setUidaiNo(String uidaiNo) {
		this.uidaiNo = uidaiNo;
	}
	@Column(name="pan_card_no", unique=false, nullable=true, insertable=true, updatable=true, length=20)

	public String getPanCardNo() {
		return panCardNo;
	}

	public void setPanCardNo(String panCardNo) {
		this.panCardNo = panCardNo;
	}
	@Column(name="voter_id_no", unique=false, nullable=true, insertable=true, updatable=true, length=20)

	public String getVoterIdNo() {
		return voterIdNo;
	}

	public void setVoterIdNo(String voterIdNo) {
		this.voterIdNo = voterIdNo;
	}
	@Column(name="driving_license_no", unique=false, nullable=true, insertable=true, updatable=true, length=20)

	public String getDrivingLicenseNo() {
		return drivingLicenseNo;
	}

	public void setDrivingLicenseNo(String drivingLicenseNo) {
		this.drivingLicenseNo = drivingLicenseNo;
	}

	@Column(name="photo_url", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getPhotoUrl() {
		return photoUrl;
	}

	public void setPhotoUrl(String photoUrl) {
		this.photoUrl = photoUrl;
	}
	@Column(name="attachment_url", unique=false, nullable=true, insertable=true, updatable=true, length=500)

	public String getAttachmentUrl() {
		return this.attachmentUrl;
	}

	public void setAttachmentUrl(String attachmentUrl) {
		this.attachmentUrl = attachmentUrl;
	}
	@Column(name="description", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		if(description != null && description.length() > 100) {
			this.description = description.substring(0, 99);
		} else {
			this.description = description;
		}
	}
	@Column(name="location", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}
	@Column(name="error_messages", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getErrorMessages() {
		return errorMessages;
	}

	public void setErrorMessages(String errorMessages) {
		this.errorMessages = errorMessages;
	}

	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="MProfile")

	public Set<MBankAccount> getMBankAccounts() {
		return this.MBankAccounts;
	}

	public void setMBankAccounts(Set<MBankAccount> MBankAccounts) {
		this.MBankAccounts = MBankAccounts;
	}
	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="MProfile")

	public Set<MAc> getMAcs() {
		return this.MAcs;
	}

	public void setMAcs(Set<MAc> MAcs) {
		this.MAcs = MAcs;
	}
	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="MProfile")

	public Set<MemberContact> getMemberContacts() {
		return this.memberContacts;
	}

	public void setMemberContacts(Set<MemberContact> memberContacts) {
		this.memberContacts = memberContacts;
	}

	@Transient
	public int getGroupMemberCounter() {
		return groupMemberCounter;
	}

	public void setGroupMemberCounter(int groupMemberCounter) {
		this.groupMemberCounter = groupMemberCounter;
	}

	@Transient
	public long getParentGroupAcNo() {
		return parentGroupAcNo;
	}

	public void setParentGroupAcNo(long parentGroupAcNo) {
		this.parentGroupAcNo = parentGroupAcNo;
	}
}
