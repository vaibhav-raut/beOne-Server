package com.beone.shg.net.persistence.model;
// Generated Mar 22, 2014 6:10:19 PM by Hibernate Tools 3.1.0.beta4

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;


/**
 * MemberContact generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="member_contact"
,catalog="shg"
, uniqueConstraints = {  }
		)

public class MemberContact  implements java.io.Serializable {

	// Fields    
	private long contactId;
	private MProfile MProfile;
	private Contact contact;
	private NameTitle nameTitle;
	private Lang lang;
	private String firstName;
	private String middleName;
	private String lastName;


	// Constructors

	/** default constructor */
	public MemberContact() {
	}

	/** minimal constructor */
	public MemberContact(long contactId, MProfile MProfile, Contact contact, Lang lang) {
		this.contactId = contactId;
		this.MProfile = MProfile;
		this.contact = contact;
		this.lang = lang;
	}

	/** full constructor */
	public MemberContact(long contactId, MProfile MProfile, Contact contact, NameTitle nameTitle, Lang lang, String firstName, String middleName, String lastName) {
		this.contactId = contactId;
		this.MProfile = MProfile;
		this.contact = contact;
		this.nameTitle = nameTitle;
		this.lang = lang;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
	}


	// Property accessors
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "MemberContactIdGenerator")
	@GenericGenerator(name = "MemberContactIdGenerator", strategy = "com.beone.shg.net.persistence.generator.MemberContactIdGenerator")
	@Column(name="contact_id", unique=true, nullable=false, insertable=true, updatable=true)

	public long getContactId() {
		return this.contactId;
	}

	public void setContactId(long contactId) {
		this.contactId = contactId;
	}
	@ManyToOne(cascade={},
			fetch=FetchType.EAGER)

	@JoinColumn(name="m_ac_no", unique=false, nullable=false, insertable=true, updatable=true)

	public MProfile getMProfile() {
		return this.MProfile;
	}

	public void setMProfile(MProfile MProfile) {
		this.MProfile = MProfile;
	}
	@ManyToOne(cascade={},
			fetch=FetchType.EAGER)

	@JoinColumn(name="contact_id", unique=true, nullable=false, insertable=false, updatable=false)

	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}
	@ManyToOne(cascade={},
			fetch=FetchType.EAGER)

	@JoinColumn(name="title_id", unique=false, nullable=true, insertable=true, updatable=true)

	public NameTitle getNameTitle() {
		return this.nameTitle;
	}

	public void setNameTitle(NameTitle nameTitle) {
		this.nameTitle = nameTitle;
	}
	@ManyToOne(cascade={},
			fetch=FetchType.EAGER)

	@JoinColumn(name="lang_id", unique=false, nullable=false, insertable=true, updatable=true)

	public Lang getLang() {
		return this.lang;
	}

	public void setLang(Lang lang) {
		this.lang = lang;
	}
	@Column(name="first_name", unique=false, nullable=true, insertable=true, updatable=true, length=30)

	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	@Column(name="middle_name", unique=false, nullable=true, insertable=true, updatable=true, length=30)

	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}
	@Column(name="last_name", unique=false, nullable=true, insertable=true, updatable=true, length=30)

	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

}
