package com.beone.shg.net.persistence.model;
// Generated Mar 22, 2014 6:10:17 PM by Hibernate Tools 3.1.0.beta4

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

/**
 * GProfile generated by hbm2java
 */
@Entity
@Table(name="g_profile"
,catalog="shg"
, uniqueConstraints = {  }
		)

public class GProfile  implements java.io.Serializable {

	// Fields    
	private static final long serialVersionUID = 8221194395957935747L;
	private long GAcNo;
	private int approvalStatusId;
	private int activeStatusId;
	private int groupTypeId;
	private Date lastLoggedInTs;
	private long approvedByMember;
	private Float percentageProfileComplete;
	private Integer activeChildGroups;
	private Integer activeCoreMembers;
	private Integer activeAssociateMembers;
	private Integer noOfTopGroups;
	private Integer noOfDownGroups;
	private Integer memberCounter;
	private String registrationNo;
	private byte[] profileCode;
	private Date establishmentDate;
	private Date approvalDate;
	private Date registrationDate;
	private String logoUrl;
	private String attachmentUrl;
	private String description;
	private String location;
	private String errorMessages;
	private Set<GroupContact> groupContacts = new HashSet<GroupContact>(0);
	private Set<GBankAccount> GBankAccounts = new HashSet<GBankAccount>(0);
	private Set<GAc> GAcs = new HashSet<GAc>(0);
	private Set<GRules> gRuleses = new HashSet<GRules>(0);
	private Set<BankProfile> bankProfiles = new HashSet<BankProfile>(0);

	// Transient Fields
	private int districtGroupCounter;
	private int homeDistrictId;

	// Constructors

	/** default constructor */
	public GProfile() {
	}

	// Property accessors
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "GroupIdGenerator")
	@GenericGenerator(name = "GroupIdGenerator", strategy = "com.beone.shg.net.persistence.generator.GroupIdGenerator")
	@Column(name="g_ac_no", unique=true, nullable=false, insertable=true, updatable=false)
	public long getGAcNo() {
		return this.GAcNo;
	}

	public void setGAcNo(long GAcNo) {
		this.GAcNo = GAcNo;
	}
	@Column(name="approval_status_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getApprovalStatusId() {
		return this.approvalStatusId;
	}

	public void setApprovalStatusId(int approvalStatusId) {
		this.approvalStatusId = approvalStatusId;
	}
	@Column(name="approved_by_m", unique=false, nullable=true, insertable=true, updatable=true)

	public long getApprovedByMember() {
		return this.approvedByMember;
	}

	public void setApprovedByMember(long approvedByMember) {
		this.approvedByMember = approvedByMember;
	}
	@Column(name="percentage_pro_comp", unique=false, nullable=true, insertable=true, updatable=true, precision=12, scale=0)

	public Float getPercentageProfileComplete() {
		return percentageProfileComplete;
	}

	public void setPercentageProfileComplete(Float percentageProfileComplete) {
		this.percentageProfileComplete = percentageProfileComplete;
	}
	@Column(name="active_child_groups", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getActiveChildGroups() {
		return activeChildGroups;
	}

	public void setActiveChildGroups(Integer activeChildGroups) {
		this.activeChildGroups = activeChildGroups;
	}
	@Column(name="active_status_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getActiveStatusId() {
		return this.activeStatusId;
	}

	public void setActiveStatusId(int activeStatusId) {
		this.activeStatusId = activeStatusId;
	}
	@Column(name="group_type_id", unique=false, nullable=false, insertable=true, updatable=true)

	public int getGroupTypeId() {
		return this.groupTypeId;
	}

	public void setGroupTypeId(int groupTypeId) {
		this.groupTypeId = groupTypeId;
	}
	@Column(name="last_logged_in_ts", unique=false, nullable=true, insertable=true, updatable=true, length=19)

	public Date getLastLoggedInTs() {
		return this.lastLoggedInTs;
	}

	public void setLastLoggedInTs(Date lastLoggedInTs) {
		this.lastLoggedInTs = lastLoggedInTs;
	}
	@Column(name="active_core_members", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getActiveCoreMembers() {
		return activeCoreMembers;
	}

	public void setActiveCoreMembers(Integer activeCoreMembers) {
		this.activeCoreMembers = activeCoreMembers;
	}
	@Column(name="active_associate_members", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getActiveAssociateMembers() {
		return activeAssociateMembers;
	}

	public void setActiveAssociateMembers(Integer activeAssociateMembers) {
		this.activeAssociateMembers = activeAssociateMembers;
	}
	@Column(name="no_of_top_g", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getNoOfTopGroups() {
		return noOfTopGroups;
	}

	public void setNoOfTopGroups(Integer noOfTopGroups) {
		this.noOfTopGroups = noOfTopGroups;
	}
	@Column(name="no_of_down_g", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getNoOfDownGroups() {
		return noOfDownGroups;
	}

	public void setNoOfDownGroups(Integer noOfDownGroups) {
		this.noOfDownGroups = noOfDownGroups;
	}

	@Column(name="member_counter", unique=false, nullable=true, insertable=true, updatable=true)

	public Integer getMemberCounter() {
		return this.memberCounter;
	}

	public void setMemberCounter(Integer memberCounter) {
		this.memberCounter = memberCounter;
	}
	@Column(name="registration_no", unique=false, nullable=true, insertable=true, updatable=true, length=15)

	public String getRegistrationNo() {
		return registrationNo;
	}

	public void setRegistrationNo(String registrationNo) {
		this.registrationNo = registrationNo;
	}
	
	@Lob
	@Column(name = "profile_code", nullable=true, columnDefinition="blob")
	public byte[] getProfileCode() {
		return profileCode;
	}

	public void setProfileCode(byte[] profileCode) {
		this.profileCode = profileCode;
	}

	@Column(name="establishment_date", unique=false, nullable=true, insertable=true, updatable=true, length=19)

	public Date getEstablishmentDate() {
		return establishmentDate;
	}

	public void setEstablishmentDate(Date establishmentDate) {
		this.establishmentDate = establishmentDate;
	}
	@Column(name="approval_date", unique=false, nullable=true, insertable=true, updatable=true, length=19)

	public Date getApprovalDate() {
		return approvalDate;
	}

	public void setApprovalDate(Date approvalDate) {
		this.approvalDate = approvalDate;
	}
	@Column(name="date_of_registration", unique=false, nullable=true, insertable=true, updatable=true, length=19)

	public Date getRegistrationDate() {
		return registrationDate;
	}

	public void setRegistrationDate(Date registrationDate) {
		this.registrationDate = registrationDate;
	}
	@Column(name="logo_url", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getLogoUrl() {
		return logoUrl;
	}

	public void setLogoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
	}
	@Column(name="attachment_url", unique=false, nullable=true, insertable=true, updatable=true, length=500)

	public String getAttachmentUrl() {
		return this.attachmentUrl;
	}

	public void setAttachmentUrl(String attachmentUrl) {
		this.attachmentUrl = attachmentUrl;
	}
	@Column(name="description", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		if(description != null && description.length() > 100) {
			this.description = description.substring(0, 99);
		} else {
			this.description = description;
		}
	}
	@Column(name="location", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}
	@Column(name="error_messages", unique=false, nullable=true, insertable=true, updatable=true, length=100)

	public String getErrorMessages() {
		return errorMessages;
	}

	public void setErrorMessages(String errorMessages) {
		this.errorMessages = errorMessages;
	}
	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="GProfile")

	public Set<GroupContact> getGroupContacts() {
		return this.groupContacts;
	}

	public void setGroupContacts(Set<GroupContact> groupContacts) {
		this.groupContacts = groupContacts;
	}
	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="GProfile")

	public Set<GBankAccount> getGBankAccounts() {
		return this.GBankAccounts;
	}

	public void setGBankAccounts(Set<GBankAccount> GBankAccounts) {
		this.GBankAccounts = GBankAccounts;
	}
	@OneToMany(cascade={CascadeType.REMOVE}, fetch=FetchType.EAGER, mappedBy="GProfile")

	public Set<GAc> getGAcs() {
		return this.GAcs;
	}

	public void setGAcs(Set<GAc> GAcs) {
		this.GAcs = GAcs;
	}
	@OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.EAGER, mappedBy="GProfile")

	public Set<GRules> getGRuleses() {
		return this.gRuleses;
	}

	public void setGRuleses(Set<GRules> gRuleses) {
		this.gRuleses = gRuleses;
	}
	@OneToMany(cascade={CascadeType.ALL}, fetch=FetchType.EAGER, mappedBy="GProfile")

	public Set<BankProfile> getBankProfiles() {
		return this.bankProfiles;
	}

	public void setBankProfiles(Set<BankProfile> bankProfiles) {
		this.bankProfiles = bankProfiles;
	}

	@Transient
	public int getDistrictGroupCounter() {
		return districtGroupCounter;
	}

	public void setDistrictGroupCounter(int districtGroupCounter) {
		this.districtGroupCounter = districtGroupCounter;
	}

	@Transient
	public int getHomeDistrictId() {
		return homeDistrictId;
	}

	public void setHomeDistrictId(int homeDistrictId) {
		this.homeDistrictId = homeDistrictId;
	}

}
